I"∆<h1 id="prel√∫dio">Prel√∫dio</h1>

<p>Neste cap√≠tulo nos √© apresentado a familia de linguagens <code class="language-plaintext highlighter-rouge">Lisp</code>,
concebida por McCarthy em 1960 e, que tem como proposta poder ter
fun√ß√µes matem√°ticas para montar sua estruturas de dados.</p>

<p>Lisp no come√ßo n√£o possu√≠a tanta efici√™ncia em computa√ß√µes num√©ricas por
conta de seu car√°ter experimental. Ap√≥s anos de aperfei√ßoamento, Lisp
foi ganhando espa√ßo e hoje √© bem popular em meios como a <code class="language-plaintext highlighter-rouge">shell</code> dos
sistemas operacionais, meios estes que n√£o tem como preocupa√ß√£o central
o par√¢metro de efici√™ncia.</p>

<p>A fam√≠lia Lisp √© √≥tima para o estudo de estrutura de dados e suas rela√ß√µes.</p>

<h1 id="elementos-da-programa√ß√£o">Elementos da Programa√ß√£o</h1>

<p>Linguagens podem servir de <code class="language-plaintext highlighter-rouge">frameworks</code> para organizar nossas ideias a
respeito de processos, toda linguagem poderosa tem tr√™s mecanismos que
permitem isto:</p>

<ul>
  <li>
    <p><strong>Express√µes Primitivas</strong></p>

    <p>Entidades mais simples que a linguagem procura se preocupar</p>
  </li>
  <li>
    <p><strong>Meios de Combina√ß√£o</strong></p>

    <p>Forma pela qual elementos compostos s√£o constru√≠dos atrav√©s de
elementos mais simples</p>
  </li>
  <li>
    <p><strong>Meios de Abstra√ß√£o</strong></p>

    <p>Formas pela qual elementos compostos s√£o manipulados como unidades</p>
  </li>
</ul>

<h1 id="combina√ß√µes">Combina√ß√µes</h1>

<p>As combina√ß√µes s√£o feitas de forma recursiva, com operador mais a
esquerda e sempre executando as opera√ß√µes mais internas da express√£o</p>

<p>Considere o seguinte trecho de c√≥digo:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(* (+ 2 (* 4 6)) (+ 3 5 7))
</code></pre></div></div>

<p>A regra de avalia√ß√£o ser√° aplicada em quatro opera√ß√µes atrav√©s da
t√©cnica de recurs√£o(A recurs√£o √© uma t√©cnica poderosa para lidar com os objetos e
suas respectivas hierarquias). Tendo em vista isso, as opera√ß√µes podem
ser escritas na seguinte ordem:</p>

<ol>
  <li>
    <p>* 4 6 = 24</p>

    <p><em>Estas duas express√µes est√£o no mesmo n√≠vel de hierarquia</em></p>

    <ol>
      <li>
        <p>+ 2 24 = 26</p>
      </li>
      <li>
        <p>+ 3 5 7 = 15</p>
      </li>
    </ol>
  </li>
  <li>
    <p>* 26 15 = 390</p>
  </li>
</ol>

<h1 id="modelo-de-substitui√ß√£o">Modelo de Substitui√ß√£o</h1>

<p>No processo realizado pelo modelo de substitui√ß√£o, voc√™ substitui cada
par√¢metro formal no corpo da express√£o pelo valor do argumento
correspondente</p>

<p>Podemos ilustrar isto da seguinte forma, considere a express√£o a seguir:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(define (sum-of-squares x y)  
     (+ (square x) (square y)))
     (define (square x) (* x x))
</code></pre></div></div>

<p>Chamaremos a fun√ß√£o da seguinte forma: <code class="language-plaintext highlighter-rouge">(sum-of-squares 3 4)</code></p>

<ol>
  <li>
    <p>N√≥s temos um par√¢metro formal, <code class="language-plaintext highlighter-rouge">x</code>, que √© chamado como argumento 3 e
<code class="language-plaintext highlighter-rouge">y</code>, que √© chamado como argumento 4</p>
  </li>
  <li>
    <p>Agora cada ocorr√™ncia de <code class="language-plaintext highlighter-rouge">x</code> e <code class="language-plaintext highlighter-rouge">y</code> no corpo da equa√ß√£o ser√°
substitu√≠do respectivamente por 3 e 4</p>
  </li>
  <li>
    <p>O corpo da equa√ß√£o ent√£o ter√° est√° apar√™ncia:
<code class="language-plaintext highlighter-rouge">(+ (square 3) (square 4))</code></p>
  </li>
  <li>
    <p>Usando a defini√ß√£o de <code class="language-plaintext highlighter-rouge">square</code>, isto se torna: <code class="language-plaintext highlighter-rouge">(+ (* 3 3) (* 4 4))</code></p>
  </li>
  <li>
    <p>Aplicando a multiplica√ß√£o em ambos, temos: <code class="language-plaintext highlighter-rouge">(+ 9 16)</code></p>
  </li>
  <li>
    <p>Aplicamos a soma e no final teremos 25 como resultado</p>
  </li>
</ol>

<p>O objetivo da substitui√ß√£o √© nos ajudar a pensar sobre a aplica√ß√£o do
procedimento e n√£o fornecer uma descri√ß√£o precisa de como o int√©rprete
realmente funciona. Os int√©rpretes t√≠picos n√£o avaliam as aplica√ß√µes do
procedimento manipulando o texto para substituir valores dos par√¢metros
formais</p>
:ET